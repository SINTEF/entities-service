[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "entities_service"

[tool.flit.sdist]
exclude = [
    ".*",
    "tests",
    "docs",
    "CHANGELOG.md",
    "docker-compose.yml",
    "Dockerfile",
]
include = [
    "pyproject.toml",
    "README.md",
    "LICENSE",
    "entities_service",
]

[project]
name = "entities-service"
authors = [
    {name = "Casper Welzel Andersen", email = "casper.w.andersen@sintef.no"},
]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
requires-python = "~=3.10"
dynamic = ["version", "description"]

dependencies = [
    "fastapi ~=0.115.7",
    "httpx >=0.27.2,<1",
    "pydantic-settings ~=2.7",
    "pymongo ~=4.10",
    "python-dotenv ~=1.0",
    "uvicorn ~=0.34.0",
]

[project.optional-dependencies]
cli = [
    "httpx-auth ~=0.23.1",
    "pyyaml ~=6.0",
    "typer ~=0.15.1",
]
testing = [
    "cryptography >=43.0.0,<45",
    # Pytest runs, end in Segmentation Fault for dlite-python versions >0.5.23
    "dlite-python <=0.5.23; python_version < '3.13'",  # DLite is not yet compatible with Python 3.13
    "mongomock ~=4.3",
    "pytest ~=8.3",
    "pytest-asyncio ~=0.25.2",
    "pytest-cov ~=6.0",
    "pytest-httpx >=0.34.0,<1",
    "entities-service[cli]",
]
server = [
    "gunicorn ~=23.0.0",
]
dev = [
    "pre-commit ~=4.1",
    "entities-service[cli,testing]",
]

[project.scripts]
entities-service = "entities_service.cli.main:APP"

[project.urls]
Home = "https://github.com/SINTEF/entities-service"
Documentation = "https://CasperWA.github.io/entities-service"
Source = "https://github.com/SINTEF/entities-service"
"Issue Tracker" = "https://github.com/SINTEF/entities-service/issues"
Changelog = "https://CasperWA.github.io/entities-service/latest/CHANGELOG"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
hide_error_codes = false
allow_redefinition = true
check_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.ruff.lint]
extend-select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "B",  # flake8-bugbear
  "BLE",  # flake8-blind-except
  "I",  # isort
  "ARG",  # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "ICN",  # flake8-import-conventions
  "G",  # flake8-logging-format
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "RET",  # flake8-return
  "RUF",  # Ruff-specific
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "YTT",  # flake8-2020
  "EXE",  # flake8-executable
  "PYI",  # flake8-pyi
]
ignore = [
  "PLR",  # Design related pylint codes
  "B008",  # Performing function calls in argument defaults - done all the time in the CLI.
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
".github/**" = [
    "BLE",  # flake8-blind-except
    "T20",  # flake8-print
]
"docs/example/**" = [
    "BLE",  # flake8-blind-except
    "I002",  # missing-required-import
    "T20",  # flake8-print
]
"tests/**" = [
    "BLE",  # flake8-blind-except
    "T20",  # flake8-print
]
"entities_service/cli/commands/**" = [
    # We must be able to set command input defaults
    "B006",  # Do not use mutable data structures for argument defaults
]

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-rs --cov=entities_service --cov-config=pyproject.toml --cov-report=term-missing:skip-covered --no-cov-on-fail"
filterwarnings = [
    # Treat all warnings as errors
    "error",

    # mongomock uses pkg_resources
    "ignore:.*pkg_resources is deprecated as an API.*:DeprecationWarning",

    # httpx-auth uses datetime.datetime.utcfromtimestamp(), deprecated in Python 3.12
    "ignore:.*Use timezone-aware objects to represent datetimes in UTC.*:DeprecationWarning",

    # 'app' parameter is deprecated in httpx
    # starlette's TestClient should be updated
    "ignore:.*'app' shortcut is now deprecated.*:DeprecationWarning",

    # Starlette's TestClient does not properly close all memory streams.
    # For more information see the discussion on GitHub:
    # https://github.com/encode/starlette/discussions/2603
    "ignore:.*MemoryObjectReceiveStream.*:pytest.PytestUnraisableExceptionWarning",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
sigterm = true
relative_files = true
source = ["entities_service"]
